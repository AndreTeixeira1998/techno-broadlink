name: ci

on: [push]

jobs:
  install-and-test-js:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.16.2]  
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@master
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies, Test, and Build
      run: |
        cd frontend
        yarn install --frozen-lockfile --check-files
        yarn lint
        yarn build
      env:
        CI: true

  install-and-test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8.5]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        cd api
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest

  build-and-push-docker-image:
    needs: [install-and-test-js, install-and-test-python]
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: timothystewart6/techno-broadlink:latest
          tag_with_ref: true
          tag_with_sha: true
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}